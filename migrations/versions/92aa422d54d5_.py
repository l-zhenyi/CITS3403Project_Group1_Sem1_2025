"""empty message

Revision ID: 92aa422d54d5
Revises: <previous_revision_id> 
Create Date: <some_date>

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '92aa422d54d5'
down_revision = '2666b9e13a1e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('groups', schema=None) as batch_op:
        batch_op.add_column(sa.Column('owner_id', sa.Integer(), nullable=True))
        # +++ MODIFIED: Added a constraint name 'fk_groups_owner_id_user' +++
        batch_op.create_foreign_key('fk_groups_owner_id_user', 'user', ['owner_id'], ['id'])

    with op.batch_alter_table('group_member', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_owner', sa.Boolean(), nullable=False, server_default=sa.false()))
        # If nullable=False, and you're adding to an existing table,
        # you might need server_default=sa.false() or handle existing rows.
        # If you made it nullable=False without default in model and table has rows, this might need adjustment.
        # Given your model has default=False, nullable=False, this should be okay.
        # If it was nullable=True, then no server_default is strictly needed.

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('group_member', schema=None) as batch_op:
        batch_op.drop_column('is_owner')

    with op.batch_alter_table('groups', schema=None) as batch_op:
        # +++ MODIFIED: Use the same constraint name for dropping +++
        batch_op.drop_constraint('fk_groups_owner_id_user', type_='foreignkey')
        batch_op.drop_column('owner_id')

    # ### end Alembic commands ###