/* ==========================================================================
   Global Box Sizing (Highly Recommended)
   ========================================================================== */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* ==========================================================================
   Events View Styles
   ========================================================================== */

.events-view {
    /* Positioning & Box Model */
    display: none; /* Hidden by default, shown by JS */
    flex-direction: column;
    flex-grow: 1;
    width: 100%;
    height: 100%;
    min-height: 0; /* Important for flex children to scroll correctly */
    overflow-y: auto; /* Scroll the list */
    overflow-x: hidden;
    padding: 15px; /* Consistent padding */
    border-radius: inherit; /* Match parent rounding */
    position: relative; /* For potential sticky filter bar */
    padding-top: 5px;
}

.event-filter-bar {
    /* Positioning & Box Model */
    display: flex;
    align-items: center;
    gap: 8px; /* Space between pills */
    padding: 8px 12px;
    margin-bottom: 20px;
    border-radius: 999px; /* Pill shape */
    flex-shrink: 0; /* Prevent filter bar from shrinking */
    position: sticky;
    top: 5px; /* Stick slightly below the top edge */
    z-index: 5;
    width: fit-content; /* Size to content */
    background: rgba(140, 140, 145, 0.85);
}

.filter-pill {
    /* Box Model */
    padding: 7px 20px;
    border: none;
    border-radius: 999px; /* Pill shape */

    /* Typography */
    font-size: 0.9rem;
    font-weight: 500;
    color: #e0e0e5;
    white-space: nowrap;
    text-shadow: 0 0 5px rgba(0, 0, 0, 0.4);

    /* Visual */
    background: none;
    cursor: pointer;
    transition: background-color 0.3s ease, color 0.3s ease;
}

.filter-pill:hover {
    background-color: rgba(255, 255, 255, 0.1);
}

.filter-pill.active {
    background-color: rgba(255, 255, 255, 0.2);
    color: #fff;
    font-weight: 600;
    text-shadow: none;
}

/* --- CSS for JavaScript Flexbox Tile Layout --- */
.event-list-container {
    /* 
       JavaScript will set:
       display: flex;
       flex-wrap: wrap;
       gap: TILE_GAP (e.g., 16px);
    */
    padding-top: 10px; /* Space below the filter bar */
    /* Add any other desired container-level padding or margins here */
    /* For example, if you want padding on the sides of the tile area: */
    /* padding-left: 10px; */
    /* padding-right: 10px; */
}

.event-tile {
    /* JavaScript will set the width dynamically. */
    /* Make sure tiles can shrink if necessary, and handle internal padding. */
    box-sizing: border-box; /* Crucial for width calculations */
    
    /* Visual Styles (keep these from your original) */
    padding: 18px;
    border-radius: 16px;
    border: 1px solid rgba(255, 255, 255, 0.25);
    background: rgba(140, 140, 145, 0.7);
    backdrop-filter: blur(25px) saturate(140%);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    cursor: pointer;
    min-height: 160px; /* Example: give tiles a minimum height */

    /* If tiles have internal flex content that needs to shrink: */
    /* display: flex; */
    /* flex-direction: column; */
    /* overflow: hidden; /* To prevent content from breaking tile bounds */
}

.event-tile:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
}

.event-tile h4 {
    font-size: 1.1rem;
    font-weight: 600;
    color: #fff;
    margin-top: 0;
    margin-bottom: 6px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.event-tile .tile-detail {
    font-size: 0.9rem;
    color: #e5e5ea;
    margin-bottom: 4px;
    display: flex;
    align-items: center;
    gap: 6px;
}

.event-tile .tile-detail:last-child {
    margin-bottom: 0;
}

.tile-detail .icon {
    font-size: 0.9em;
    opacity: 0.8;
}

/* Message for no events */
.event-list-container .no-events-message,
.event-list-container .error-message {
    /* Ensure these messages take full width if they are the only content */
    width: 100%; 
    text-align: center;
    padding: 40px 20px;
    color: #b0b0b8; /* Default for no-events */
    font-size: 1.1rem;
}
.event-list-container .error-message {
    color: #ff8080; /* Specific color for error */
}


/* ==========================================================================
     Media Queries for Mobile Responsiveness
     ========================================================================== */

@media (max-width: 768px) {
    .event-filter-bar {
        top: 0;
        margin-bottom: 15px;
    }

    .filter-pill {
        padding: 5px 15px;
        font-size: 0.85rem;
    }

    .event-list-container {
        padding-top: 5px;
        /* JavaScript will still calculate tile widths. On mobile, 
           calculateTileLayout will likely result in numCols = 1, 
           making tileWidth = containerWidth. The TILE_GAP will still apply
           vertically between rows if flex-wrap occurs (which it won't for 1 col usually).
        */
    }

    .event-tile {
        padding: 15px;
        border-radius: 12px;
        /* On mobile, if JS calculates 1 column, tile width will be container width. */
    }

    .event-tile h4 {
        font-size: 1rem;
    }

    .event-tile .tile-detail {
        font-size: 0.85rem;
    }

    /* Ensure mobile view classes don't conflict when Events view is active */
    .planner-pane.events-view-active.mobile-event-view-active .group-list-area,
    .planner-pane.events-view-active.mobile-event-view-active .event-collage-area,
    .planner-pane.events-view-active.mobile-event-view-active .calendar-view,
    .planner-pane.events-view-active.mobile-event-view-active .insights-view {
        display: none !important;
        flex: 0 0 0 !important;
        opacity: 0 !important;
        pointer-events: none !important;
    }

    .planner-pane.events-view-active.mobile-event-view-active .events-view {
        display: flex !important;
        flex: 1 1 auto !important;
        opacity: 1 !important;
        pointer-events: auto !important;
    }
}